/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as WishlistImport } from './routes/wish_list'
import { Route as LoginImport } from './routes/login'
import { Route as BooksImport } from './routes/books'
import { Route as AddbookImport } from './routes/add_book'
import { Route as IndexImport } from './routes/index'
import { Route as UpdatebookBookIdImport } from './routes/update_book.$bookId'

// Create/Update Routes

const WishlistRoute = WishlistImport.update({
  id: '/wish_list',
  path: '/wish_list',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const BooksRoute = BooksImport.update({
  id: '/books',
  path: '/books',
  getParentRoute: () => rootRoute,
} as any)

const AddbookRoute = AddbookImport.update({
  id: '/add_book',
  path: '/add_book',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const UpdatebookBookIdRoute = UpdatebookBookIdImport.update({
  id: '/update_book/$bookId',
  path: '/update_book/$bookId',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/add_book': {
      id: '/add_book'
      path: '/add_book'
      fullPath: '/add_book'
      preLoaderRoute: typeof AddbookImport
      parentRoute: typeof rootRoute
    }
    '/books': {
      id: '/books'
      path: '/books'
      fullPath: '/books'
      preLoaderRoute: typeof BooksImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/wish_list': {
      id: '/wish_list'
      path: '/wish_list'
      fullPath: '/wish_list'
      preLoaderRoute: typeof WishlistImport
      parentRoute: typeof rootRoute
    }
    '/update_book/$bookId': {
      id: '/update_book/$bookId'
      path: '/update_book/$bookId'
      fullPath: '/update_book/$bookId'
      preLoaderRoute: typeof UpdatebookBookIdImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/add_book': typeof AddbookRoute
  '/books': typeof BooksRoute
  '/login': typeof LoginRoute
  '/wish_list': typeof WishlistRoute
  '/update_book/$bookId': typeof UpdatebookBookIdRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/add_book': typeof AddbookRoute
  '/books': typeof BooksRoute
  '/login': typeof LoginRoute
  '/wish_list': typeof WishlistRoute
  '/update_book/$bookId': typeof UpdatebookBookIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/add_book': typeof AddbookRoute
  '/books': typeof BooksRoute
  '/login': typeof LoginRoute
  '/wish_list': typeof WishlistRoute
  '/update_book/$bookId': typeof UpdatebookBookIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/add_book'
    | '/books'
    | '/login'
    | '/wish_list'
    | '/update_book/$bookId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/add_book'
    | '/books'
    | '/login'
    | '/wish_list'
    | '/update_book/$bookId'
  id:
    | '__root__'
    | '/'
    | '/add_book'
    | '/books'
    | '/login'
    | '/wish_list'
    | '/update_book/$bookId'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AddbookRoute: typeof AddbookRoute
  BooksRoute: typeof BooksRoute
  LoginRoute: typeof LoginRoute
  WishlistRoute: typeof WishlistRoute
  UpdatebookBookIdRoute: typeof UpdatebookBookIdRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AddbookRoute: AddbookRoute,
  BooksRoute: BooksRoute,
  LoginRoute: LoginRoute,
  WishlistRoute: WishlistRoute,
  UpdatebookBookIdRoute: UpdatebookBookIdRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/add_book",
        "/books",
        "/login",
        "/wish_list",
        "/update_book/$bookId"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/add_book": {
      "filePath": "add_book.tsx"
    },
    "/books": {
      "filePath": "books.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/wish_list": {
      "filePath": "wish_list.tsx"
    },
    "/update_book/$bookId": {
      "filePath": "update_book.$bookId.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
